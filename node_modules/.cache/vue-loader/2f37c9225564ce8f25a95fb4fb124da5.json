{"remainingRequest":"/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/src/components/modals/registroGrupoModal.vue?vue&type=template&id=3d2009c0&","dependencies":[{"path":"/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/src/components/modals/registroGrupoModal.vue","mtime":1645809942000},{"path":"/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/cache-loader/dist/cjs.js","mtime":1728489819214},{"path":"/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1728489820775},{"path":"/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/cache-loader/dist/cjs.js","mtime":1728489819214},{"path":"/Users/juann1095/Documents/GitHub/Sistema Integral de Formación Continua 3.0b/node_modules/vue-loader/lib/index.js","mtime":1728489820388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}